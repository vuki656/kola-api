generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DB_PRISMA_URL")
}

model Listing {
    id          String   @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
    title       String
    description String
    price       Decimal  @db.Decimal
    userFk      String   @map("user_fk") @db.Uuid
    makeFk      String   @map("make_fk") @db.Uuid
    modelFk     String   @map("model_fk") @db.Uuid
    createdAt   DateTime @default(dbgenerated("timezone('utc'::text, now())")) @map("created_at") @db.Timestamp(6)
    updatedAt   DateTime @map("updated_at") @db.Timestamp(6)
    make        Make     @relation(fields: [makeFk], references: [id], onUpdate: Restrict, map: "FK_listings__makes")
    model       Model    @relation(fields: [modelFk], references: [id], onUpdate: Restrict, map: "FK_listings__models")
    author      User     @relation(fields: [userFk], references: [id], onUpdate: Restrict, map: "FK_listings__users")

    @@map("listings")
}

model User {
    id          String    @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
    firstName   String    @map("first_name")
    lastName    String    @map("last_name")
    email       String    @unique
    password    String
    phoneNumber String    @map("phone_number") @db.Char(10)
    oib         String    @unique @db.Char(11)
    isAdmin     Boolean   @default(false) @map("is_admin")
    createdAt   DateTime  @default(dbgenerated("timezone('utc'::text, now())")) @map("created_at") @db.Timestamp(6)
    updatedAt   DateTime  @map("updated_at") @db.Timestamp(6)
    listings    Listing[]

    @@map("users")
}

model Make {
    id        String    @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
    name      String
    createdAt DateTime  @default(dbgenerated("timezone('utc'::text, now())")) @map("created_at") @db.Timestamp(6)
    updatedAt DateTime  @map("updated_at") @db.Timestamp(6)
    listings  Listing[]
    models    Model[]

    @@map("makes")
}

model Model {
    id        String    @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
    name      String
    makeFk    String    @map("make_fk") @db.Uuid
    createdAt DateTime  @default(dbgenerated("timezone('utc'::text, now())")) @map("created_at") @db.Timestamp(6)
    updatedAt DateTime  @map("updated_at") @db.Timestamp(6)
    listings  Listing[]
    make      Make      @relation(fields: [makeFk], references: [id], onUpdate: Restrict, map: "FK_models__makes")

    @@map("models")
}
